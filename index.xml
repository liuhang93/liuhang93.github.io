<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>刘航</title>
    <link>https://liuhang.net.cn/</link>
    <description>Recent content on 刘航</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 03 Feb 2019 14:36:14 +0800</lastBuildDate>
    
	<atom:link href="https://liuhang.net.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go总结03 Struct</title>
      <link>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9304-struct/</link>
      <pubDate>Sun, 03 Feb 2019 14:36:14 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9304-struct/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go总结03 Slice</title>
      <link>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9303-slice/</link>
      <pubDate>Sun, 03 Feb 2019 14:22:04 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9303-slice/</guid>
      <description> Slice传参问题 Reference  Go Slice传参,值传递 go slices usage and internals  </description>
    </item>
    
    <item>
      <title>Go总结03 Map</title>
      <link>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9303-map/</link>
      <pubDate>Sun, 03 Feb 2019 11:14:36 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9303-map/</guid>
      <description>本文对golang中map的用法和底层实现进行了总结和探究。
 Go Maps Basic Use 基本使用  首先，对golang map的基本使用和注意事项进行总结。
 Declaration， initialization， assign， iteration， delete 声明、初始化、赋值、迭代、删除  map类型可以定义如下: A map is an unordered group of elements of one type， called the element type， indexed by a set of unique keys of another type， called the key type.(https://golang.org/ref/spec#Map_types)
 示例代码如下
  Key types key的类型 摘自: go maps in action 1. map keys may be of any type that is comparable，The language spec defines this precisely， but in short， comparable types are boolean， numeric， string， pointer， channel， and interface types， and structs or arrays that contain only those types.</description>
    </item>
    
    <item>
      <title>Vim总结</title>
      <link>https://liuhang.net.cn/posts/vim/vim%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 11 Nov 2018 01:38:28 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/vim/vim%E6%80%BB%E7%BB%93/</guid>
      <description> ctrlp.vim使用  </description>
    </item>
    
    <item>
      <title>Go总结02-golang常用工具库</title>
      <link>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9302-golang%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93/</link>
      <pubDate>Fri, 09 Nov 2018 14:44:04 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9302-golang%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93/</guid>
      <description> 读写excel  excelize  爬虫  gocolly 其他参考：goquery  json解  json-iterator/go  </description>
    </item>
    
    <item>
      <title>数据结构与算法03-散列表</title>
      <link>https://liuhang.net.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9503-%E6%95%A3%E5%88%97%E8%A1%A8/</link>
      <pubDate>Wed, 07 Nov 2018 11:09:58 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9503-%E6%95%A3%E5%88%97%E8%A1%A8/</guid>
      <description> 引言  本文总结散列表hash table的基础知识，并深入探究golang中map数据结构的实现
 散列表基础 golang map深入分析  bucket长度为什么为2  Reference  18 | 散列表（上）：Word文档中的单词拼写检查功能是如何实现的？ macro-view-of-map-internals-in-go map的实现 GO Map内部实现 understanding-type-in-go Go-Hashmap内存布局和实现 Golang map 的底层实现 golang 的 map 实现（一） 解剖Go语言map底层实现 []  </description>
    </item>
    
    <item>
      <title>Go总结01-必备基础知识</title>
      <link>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9301-%E5%BF%85%E5%A4%87%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Tue, 06 Nov 2018 13:18:50 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/go/go%E6%80%BB%E7%BB%9301-%E5%BF%85%E5%A4%87%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description> 引言  本文深入探究go命令的执行过程及各种用法。ps：最好的方法果然还是直接go help查看官方给的帮助！ go commands官方文档 官方文档写的贼详细！  go环境变量 go command go build go install go run go get go clean go bug go tool link compile Reference  初探 Go 的编译命令执行过程 2.  </description>
    </item>
    
    <item>
      <title>数据结构与算法02-线性表</title>
      <link>https://liuhang.net.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9502-%E7%BA%BF%E6%80%A7%E8%A1%A8/</link>
      <pubDate>Tue, 06 Nov 2018 10:51:42 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9502-%E7%BA%BF%E6%80%A7%E8%A1%A8/</guid>
      <description> 引言  本文总结线性表的基础知识，并深入探究golang中slice数据结构的实现
 </description>
    </item>
    
    <item>
      <title>markdown语法</title>
      <link>https://liuhang.net.cn/posts/markdown/markdown%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 05 Nov 2018 11:34:15 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/markdown/markdown%E8%AF%AD%E6%B3%95/</guid>
      <description>Markdown简介  Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科
 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者*斜体*，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Cmd + /查看帮助。
代码块 @requires_authorization def somefunc(param1=&#39;&#39;, param2=0): &#39;&#39;&#39;A docstring&#39;&#39;&#39; if param1 &amp;gt; param2: # interesting print &#39;Greater&#39; return (param2 - param1 + 1) or None class SomeClass: pass &amp;gt;&amp;gt;&amp;gt; message = &#39;&#39;&#39;interpreter ... prompt&#39;&#39;&#39;  LaTeX 公式 可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式：
$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$
表格    Item Value Qty     Computer 1600 USD 5   Phone 12 USD 12   Pipe 1 USD 234    流程图 st=&amp;gt;start: Start e=&amp;gt;end op=&amp;gt;operation: My Operation cond=&amp;gt;condition: Yes or No?</description>
    </item>
    
    <item>
      <title>Linux总结2 需要理解并掌握的概念与命令</title>
      <link>https://liuhang.net.cn/posts/linux/linux%E6%80%BB%E7%BB%932-%E9%9C%80%E8%A6%81%E7%90%86%E8%A7%A3%E5%B9%B6%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 02 Nov 2018 11:40:42 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/linux/linux%E6%80%BB%E7%BB%932-%E9%9C%80%E8%A6%81%E7%90%86%E8%A7%A3%E5%B9%B6%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%91%BD%E4%BB%A4/</guid>
      <description> ps lsof ls 理解各种参数 4.  </description>
    </item>
    
    <item>
      <title>Linux总结1 Systemd</title>
      <link>https://liuhang.net.cn/posts/linux/linux%E6%80%BB%E7%BB%931-systemd/</link>
      <pubDate>Fri, 02 Nov 2018 11:34:15 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/linux/linux%E6%80%BB%E7%BB%931-systemd/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Http/Https总结01-Https入门</title>
      <link>https://liuhang.net.cn/posts/network/http-https%E6%80%BB%E7%BB%9301-https%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 31 Oct 2018 11:19:17 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/network/http-https%E6%80%BB%E7%BB%9301-https%E5%85%A5%E9%97%A8/</guid>
      <description> 关键点：  非对称加密: 公钥加密，私钥解密；私钥签名，公钥验签。 对称加密 消息摘要(hash算法),md5,sha256等 数字证书机制 (前三点也是区块链技术中的重要点)  参考  https原理详解,看完这个基本能懂 What is a Digital Signature?,翻译版：数字签名是什么  </description>
    </item>
    
    <item>
      <title>区块链学习01-入门</title>
      <link>https://liuhang.net.cn/posts/blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A001-%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 30 Oct 2018 21:33:06 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A001-%E5%85%A5%E9%97%A8/</guid>
      <description> 疑问     关键  非对称加密 Hash算法   参考  区块链入门教程  </description>
    </item>
    
    <item>
      <title>数据结构与算法01-开篇</title>
      <link>https://liuhang.net.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9501-%E5%BC%80%E7%AF%87/</link>
      <pubDate>Tue, 30 Oct 2018 16:25:40 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9501-%E5%BC%80%E7%AF%87/</guid>
      <description> 内容    </description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://liuhang.net.cn/archives/</link>
      <pubDate>Thu, 25 Oct 2018 14:50:11 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://liuhang.net.cn/about/</link>
      <pubDate>Thu, 25 Oct 2018 14:39:14 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/about/</guid>
      <description> 关于我  记录我的服务端学习记录 包含的内容有：  数据结构与算法 计算机网络    </description>
    </item>
    
    <item>
      <title>Go-http/net</title>
      <link>https://liuhang.net.cn/posts/go/go-http-net/</link>
      <pubDate>Wed, 24 Oct 2018 18:34:04 +0800</pubDate>
      
      <guid>https://liuhang.net.cn/posts/go/go-http-net/</guid>
      <description> 参考  go netwok  </description>
    </item>
    
  </channel>
</rss>